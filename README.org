* RedBaron4emacs

POC  for python  code manipulation  with  a Full  Syntax Tree.  That's
better than regexps.

RedBaron: https://redbaron.readthedocs.org/en/latest/tuto.html

** Install

: pip install redbaron

You optionnaly need =hydra.el=.

** Usage

The one command to know to see all options:
: M-x red4e-hydra/body

*** Add an argument
Inside  a function,  call  =M-x red4e-add-arg  RET  whatever RET=.  It
replaces the method definition with a new one.

*** Rename an argument

: M-x red4e-mv-arg

*** Rename the current method

: M-x red4e-rename-method

** Motivation

take the  string =def  foo(first, **kwargs, second=foo):  pass=, where
the arguments are in a bad order, and sort them:

: def foo(first, second=foo, **kwargs): pass

Call that from within emacs, use with my snippet to add an argument to
a function, and it becomes a bit simpler (no more movements around the
code) and smarter (we manipulate =code=, not text with clunky regexps)
to add an argument to a method.
